# https://github.com/julia-actions/cache#usage
name: CI

on: [push, pull_request]

# needed to allow julia-actions/cache to delete old caches that it has created
permissions:
  actions: write
  contents: read

jobs:
  Test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Current stable release: v1.11.5 (April 4, 2025)
        julia-version: [1.11.5]
        julia-arch: [x64]
        os: [ubuntu-latest, macos-latest]
        include:
          - julia-version: nightly
            os: ubuntu-latest
          - julia-version: 1.12.0-beta2 # (April 25, 2025)
            os: ubuntu-latest
          - julia-version: 1.10.9       # LTS
            os: ubuntu-latest
          - julia-version: 1.6.7
            os: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: julia-actions/setup-julia@v1
      with:
        version: ${{ matrix.julia-version }}
    - uses: julia-actions/cache@v1
    - uses: julia-actions/julia-buildpkg@v1
    - uses: julia-actions/julia-runtest@v1

  RunMoreTests:
    needs: Test
    if: github.event.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: julia-actions/setup-julia@v1
    - uses: julia-actions/cache@v1
    - uses: julia-actions/julia-buildpkg@v1
    # - uses: julia-actions/julia-runtest@v1
    - name: ARGS to filter the targets
      run: |
           cd test/
                           julia --project=.. runtests.jl jive
                           julia --project=.. runtests.jl jive/s jive/m start=2
           cd ../

    - name: JIVE_SKIP
      run: |
           cd test/
                           JIVE_SKIP=Example,errors,jive/onlyonce/heavy.jl,jive/__END__/included.jl,jive/__REPL__ julia --project=.. runtests.jl
           cd ../

    - name: enable_distributed, JIVE_PROCS
      run: |
           cd test/
                           julia --project=.. -pauto -e 'using Jive; runtests(@__DIR__, targets=["test"])'
                           julia --project=.. -pauto -e 'using Jive; runtests(@__DIR__, targets=["test"], enable_distributed=false)'
           JIVE_PROCS=auto julia --project=..        -e 'using Pkg; Pkg.test(; test_args=["test"])'
           JIVE_PROCS=0    julia --project=.. -pauto -e 'using Pkg; Pkg.test(; test_args=["test"])'
           cd ../

    - name: stop_on_failure
      run: |
           cd test/
                           julia --project=..        -e 'using Jive; runtests(@__DIR__, targets=["errors"], stop_on_failure=true)' || true
                           julia --project=..        -e 'using Jive; runtests(@__DIR__, targets=["errors"])' || true
           cd ../

    - name: using Revise
      run: |
           cd test/Example/test/
           julia --project=.. -e 'using Pkg; Pkg.develop(path="../../../"); Pkg.add("Revise"); p1 = @async include("revise.jl"); Timer(3) do t; touch("example/test3.jl"); sleep(0.5); rm("example/test3.jl"); sleep(1); exit(0); end; wait(p1)' example
           cd ../../../

  RunForWindows:
    needs: RunMoreTests
    if: github.event.ref == 'refs/heads/master'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v1
      - uses: julia-actions/cache@v1
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1

  Coverage:
    needs: RunMoreTests
    if: github.event.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v1
      - uses: julia-actions/cache@v1
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1
        with:
          file: lcov.info
